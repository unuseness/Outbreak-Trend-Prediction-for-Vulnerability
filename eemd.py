# -*- coding: UTF-8 -*-
# @Time : 2022/9/21 15:17
# @File : eemd.py

"""
.. currentmodule:: EEMD
"""

# 导入工具包
import numpy as np
from PyEMD import EEMD, EMD, Visualisation
import pylab as plt

def Signal(S):
    # 分解出全部IMF
    max_imf = -1

    """
    信号参数：
    N:采样个数
    tMin:采样开始时间
    tMax:采样结束时间
    """
    N = 252
    tMin, tMax = 0, 252
    T = np.linspace(tMin, tMax, N) # [tMin, tMax] 取 N 各元素


    # EEMD计算
    eemd = EEMD()
    eemd.trials = 100 # 添加噪声次数
    eemd.noise_seed(12345) # 设定种子，在不同时间段执行所添加的 white noise相同

    E_IMFs = eemd.eemd(S, T, max_imf)
    imfNo = E_IMFs.shape[0] # 返回行向量个数，i.e.，IMF数量

    # 采用网格图绘制图形
    c = int(np.floor(np.sqrt(imfNo + 1)))
    r = int(np.ceil((imfNo + 1) / c))

    # print(E_IMFs.shape)

    plt.ioff()
    plt.subplot(r, c, 1)
    plt.plot(T, S, 'r')
    plt.xlim((tMin, tMax))
    plt.title("Original signal")

    for num in range(imfNo):
        plt.subplot(r, c, num + 2) # 用于直接指定划分方式和位置进行绘图r：rows c：clounm
        plt.plot(T, E_IMFs[num], 'g') # 传入 x，y
        plt.xlim((tMin, tMax)) # 设置x轴显示范围
        plt.title("Imf " + str(num + 1))

    plt.show()

    return E_IMFs
